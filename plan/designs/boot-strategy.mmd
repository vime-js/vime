classDiagram

class Player {
    ...
    +bootStrategy: click | lazy | immediate | BootStrategy
}

class Bootable {
    <<interface>>
    bootTarget: HTMLElement
    boot() Promise~void~
    renderWhileBooting() TemplateResult
}

Player --> Bootable: implements

class BootStrategy~T extends Bootable~ {
    <<interface>>
    hasBooted: boolean
    register(bootable: Bootable) Promise~void~
}

class LazyBootStrategy
class ClickBootStrategy
class ImmediateBootStrategy

BootStrategy <-- LazyBootStrategy: implements
BootStrategy <-- ClickBootStrategy: implements
BootStrategy <-- ImmediateBootStrategy: implements
BootStrategy --> Bootable

Player -- BootStrategy: use